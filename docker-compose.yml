services:
  # PostgreSQL Database Service
  db:
    image: postgres:16
    container_name: tattoo_studio_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      # Production Security: Require explicit password (no weak default)
      # Set POSTGRES_PASSWORD in .env file
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set in .env}
      POSTGRES_DB: ${POSTGRES_DB:-tattoo_studio}
    # Security: Postgres is only accessible within Docker network (not exposed to host)
    expose:
      - "5432"  # Internal Docker network only
    volumes:
      - db_data:/var/lib/postgresql/data
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c pg_stat_statements.max=10000
      -c log_min_duration_statement=100
    networks:
      - tattoo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d tattoo_studio"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Flask Application Service
  app:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: ${DOCKER_TARGET:-development}  # Use development by default, production for prod
    container_name: tattoo_studio_app
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql://admin:${POSTGRES_PASSWORD}@db:5432/tattoo_studio}
      - FLASK_APP=${FLASK_APP:-app:app}
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY:-dev-secret-change-me}
      - LIMITER_STORAGE_URI=redis://redis:6379/3
      - DEBUG_METRICS=1  # Enable Prometheus metrics in development mode
      - GIT_SHA=${GIT_SHA:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OAUTHLIB_INSECURE_TRANSPORT=${OAUTHLIB_INSECURE_TRANSPORT:-0}
      - OAUTHLIB_RELAX_TOKEN_SCOPE=${OAUTHLIB_RELAX_TOKEN_SCOPE:-1}
      - JOTFORM_API_KEY=${JOTFORM_API_KEY}
      - JOTFORM_FORM_ID=${JOTFORM_FORM_ID}
    ports:
      - "5000:5000"
    volumes:
      # For development: mount source code for hot reloading
      - ./backend:/app/backend
      - ./frontend:/app/frontend
    depends_on:
      - db
      - redis
    networks:
      - tattoo_network
  # Redis for rate limiting and caching
  redis:
    image: redis:7-alpine
    container_name: tattoo_studio_redis
    restart: always
    expose:
      - "6379"
    networks:
      - tattoo_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  db_data:

networks:
  tattoo_network:
    driver: bridge
